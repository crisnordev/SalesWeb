@model SalesWeb.ViewModels.SaleViewModels.PutSaleViewModel
@{
    Layout = "_Layout";
}
<h1>SALE</h1>
<hr/>
<form asp-action="Put">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <table class="table table-striped table-hover">
        <thead>
        <tr class="success">
            <th>
                <label asp-for="SellerId" class="contr-label"></label>
            </th>
            <th>
                <label asp-for="CustomerId" class="contr-label"></label>
            </th>
        </tr>
        </thead>
        <tbody>
        <td>
            <div class="form-group">
                <select asp-for="SellerId" class="form-control" asp-items="ViewBag.SellerId"></select>
            </div>
        </td>
        <td>
            <div class="form-group">
                <select asp-for="CustomerId" class="form-control" asp-items="ViewBag.CustomerId"></select>
            </div>
        </td>
        </tbody>
    </table>
    <hr/>
    <table class="table table-striped table-hover">
        <thead>
        <tr class="success">
            <th>
                @Html.DisplayNameFor(model => model.SoldProducts[0].SoldProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SoldProducts[0].Name)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.SoldProducts[0].Quantity)

            <th>
                @Html.DisplayNameFor(model => model.SoldProducts[0].Price)
            </th>
        </tr>
        </thead>
        @foreach (var item in Model.SoldProducts)
        {
            <tbody>
            <td>
                @Html.DisplayFor(model => item.SoldProductId)
            </td>
            <td>
                @Html.DisplayFor(model => item.Name)
            </td>
            <td>
                @Html.DisplayFor(model => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(model => item.Price)
            </td>
            </tbody>
        }
    </table>
    <table class="table table-striped table-hover">
        <thead>
        <tr class="success">
            <th>
                <label asp-for="ProductId" class="contr-label"></label>
            </th>
            <th>
                <label asp-for="ProductQuantity" class="contr-label"></label>
            </th>
        </tr>
        </thead>
        <tbody>
        <td>
            <div class="form-group">
                <select asp-for="ProductId" class="form-control" asp-items="ViewBag.ProductId"></select>
            </div>
        </td>
        <td>
            <div class="form-group">
                <input asp-for="ProductQuantity" class="form-control"/>
                <span asp-validation-for="ProductQuantity" class="text-danger"></span>
            </div>
        </td>
        </tbody>
    </table>
    <div class="form-group">
        <input type="hidden" asp-for="Id"/>
        <input type="submit" value="CONFIRM PRODUCT" class="btn btn-primary"/>
    </div>
</form>
<br/>
<div>
    <a asp-action="GetById" asp-route-id="@Model.Id" class="btn btn-primary">Finish Sale</a>
</div>
<br>
<div>
    <a asp-action="Index" class="btn btn-primary">BACK TO LIST</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
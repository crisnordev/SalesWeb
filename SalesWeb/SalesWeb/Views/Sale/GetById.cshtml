@model SalesWeb.ViewModels.SaleViewModels.GetSaleViewModel

<h1>SALE</h1>
<hr/>
<table class="table table-striped table-hover">
    <thead>
    <tr class="success">
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SellerName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CustomerName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TotalAmount)
        </th>
    </tr>
    </thead>
    <tbody>
    <td>
        @Html.DisplayFor(model => model.Id)
    </td>
    <td>
        @Html.DisplayFor(model => model.SellerName)
    </td>
    <td>
        @Html.DisplayFor(model => model.CustomerName)
    </td>
    <td>
        @Html.DisplayFor(model => model.TotalAmount)
    </td>
    </tbody>
</table>
<table class="table table-striped table-hover">
    <thead>
    <tr class="success">
        <th>
            @Html.DisplayNameFor(model => model.SoldProducts[0].SoldProductId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SoldProducts[0].Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SoldProducts[0].Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SoldProducts[0].Price)
        </th>
    </tr>
    </thead>

    @foreach (var item in Model.SoldProducts)
    {
        <tbody>
        <td>
            @Html.DisplayFor(model => item.SoldProductId)
        </td>
        <td>
            @Html.DisplayFor(model => item.Name)
        </td>
        <td>
            @Html.DisplayFor(model => item.Quantity)
        </td>
        <td>
            @Html.DisplayFor(model => item.Price)
        </td>
        </tbody>
    }
</table>
<br>
<div>
    <a asp-action="Put" asp-route-id="@Model.Id">EDIT SALE</a> |
    <a asp-action="Index">BACK TO LIST</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}